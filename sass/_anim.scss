/* CSS Document */
@mixin debug-support-matrix($experimental: true, $ie: true) {
    @debug '#{"$moz-"}$experimental-support-for-mozilla'
                 '#{"$webkit-"}$experimental-support-for-webkit'
                 '#{"$opera-"}$experimental-support-for-opera'
                 '#{"$microsoft-"}$experimental-support-for-microsoft'
                 '#{"$khtml-"}$experimental-support-for-khtml';
    @debug '#{"$ie6-"}$legacy-support-for-ie6'
                 '#{"$ie7-"}$legacy-support-for-ie7'
                 '#{"$ie8-"}$legacy-support-for-ie8';
}
@mixin keyframes($name, $deprecated-prefixes...) {
  $warned: warn-about-useless-prefix-arguments($deprecated-prefixes...);
  @include with-each-prefix(css-animation, $animation-support-threshold) {
    // It would be nice if we could dynamically construct directive names.
    @if $current-prefix == -moz {
      @-moz-keyframes #{$name} {
        @content;
      }
    }
    @if $current-prefix == -webkit {
      @-webkit-keyframes #{$name} {
        @content;
      }
    }
    @if $current-prefix == -o {
      @-o-keyframes #{$name} {
        @content;
      }
    }
    @if $current-prefix == -ms {
      @-ms-keyframes #{$name} {
        @content;
      }
    }
    @if $current-prefix == null {
      @keyframes #{$name} {
        @content;
      }
    }
  }
}

/*spiner*/
@mixin animation($name,$duration,$function,$count){
	animation-name: $name;  
    animation-timing-function: $function; 
    animation-iteration-count: $count; 
    animation-duration: $duration; 
}

@include keyframes (spiner) {
	from { 
        transform: rotateY(0deg); 
    } 
    to { 
        transform: rotateY(-360deg);
    } 
	}
@for $i from 1 through 5 {	
  .spiner#{$i} { animation-delay: 0.2s * $i; }
}
/*КОНЕЦ SPINER*/
/*SLIDE IN LEFT*/
.slideleft {
	@include animation(slideleft, 3s, linear,infinite);
	animation-delay: 0.5s;
	animation-fill-mode: both;
	animation-direction: alternate;
}


@include keyframes (slideleft) {
  0% {
    transform: translateX(0);
    transform: translateX(0);
  }
  100% {
    transform: translateX(600px);
    transform: translateX(600px);
  }
}


/*КОНЕЦ SLIDE IN LEFT*/